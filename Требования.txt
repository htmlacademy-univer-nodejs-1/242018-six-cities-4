Работоспособность

Б1. Код соответствует техническому заданию проекта.
Все обязательные пункты технического задания выполнены.


Б2. При выполнении кода не возникает необработанных ошибок.
Во время работы приложения нет сообщений вида error и предупреждений о неправильном вызове методов, API и прочего.

В пользовательском коде не используется deprecated API.

Приложение не падает при любых сценариях использования, кроме случаев, предусмотренных спецификацией.

Именование

Б3. Название переменных, параметров, свойств и методов начинается со строчной буквы и записываются в нотации camelCase.

Б4. Для названия значений используются английские существительные.

Б5. Массивы названы существительными во множественном числе.

Б6. Название функции или метода содержит глагол.

Б7. Названия констант (постоянных значений) написаны прописными (заглавными) буквами.

Б8. Название классов, конструкторов и перечислений начинается с заглавной буквы. В названии используются английские существительные. Значения перечислений объявлены в формате CamelCase.
Форматирование и внешний вид

Б9. Используются обязательные блоки кода.

Б10. Список констант идёт перед основным кодом.

Б11. Код соответствует стилю оформления, принятому на проекте.
Мусор

Б12. В итоговом коде проекта находятся только те файлы, которые были на момент создания репозитория, которые были получены в патчах, и файлы, созданные по заданию.

Б13. В коде нет заранее недостижимых участков кода.

Б14. Журнал событий (логи) не сохраняются в системе контроля версий.
Корректность

Б15. Константы нигде в коде не переопределяются.

Б16. В коде не используются зарезервированные слова в качестве имён переменных и свойств.

Б17. Для определения ошибок используется только встроенный объект Error.
Модульность

Б18. Все файлы TS представляют собой отдельные ES-модули, а название модуля соответствует его содержимому и записано строчными (маленькими) буквами, слова разделены дефисами. В имени модуля разрешено использовать пространства имён для уточнения типа модуля.

Б19. Модули не экспортируют изменяющиеся переменные.
Оптимальность

Б20. Своевременный выход из цикла: цикл не работает дольше, чем нужно.

Б21. Количество вызовов циклов минимизировано.

Б22. Для работы с промисами используются операторы async и await.
Безопасность

Б23. Пароли не хранятся в открытом виде.

Б24. В коде отсутствуют сохранённые реквизиты для доступа к сервисам.

Б25. Отсутствие операций записи на GET-методах.

Д1. Техническое задание реализовано в полном объёме.
Все обязательные и необязательные пункты технического задания выполнены.

Корректность

Д2. Методы, которые не используют поля класса объявлены как статические.

Д3. Название методов и свойств объектов не содержит название объектов.
Избыточность

Д4. Отсутствует дублирование кода: повторяющиеся части кода переписаны как функции или вынесены из условий.

Д5. Если при использовании условного оператора в любом случае возвращается значение, альтернативная ветка опускается.

Д6. Там где возможно, в присвоении значения вместо if используется тернарный оператор.

Д7. Условия упрощены.

Д8. Составные константы собираются в перечисления (Enum) или константный объект.
Магия

Д9. В коде не используются «магические значения», под каждое из них заведена отдельная переменная, названная как константа.
Сложность. Читаемость

Д10. Для каждого события используется отдельный обработчик.

Д11. Длинные функции и методы разбиты на несколько небольших.

Д12. Для работы с JS-коллекциями используются специальные методы.

Д13. Оператор присваивания не используется как часть выражения.